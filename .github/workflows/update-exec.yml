name: Exec update

on:
  workflow_dispatch:

jobs:
  update-scope:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r engine/requirements.txt

      - name: Run update script
        run: python engine/update.py


      - name: Get latest scope to scan
        id: latest_scope
        run: |
          LATEST_SCOPE_ID=$(python engine/get_latest_unscanned_scope.py | grep "LATEST_SCOPE_ID" | cut -d '=' -f2)
          LATEST_SCOPE_NAME=$(python engine/get_latest_unscanned_scope.py | grep "LATEST_SCOPE_NAME" | cut -d '=' -f2)
          LATEST_SCOPE_TYPE=$(python engine/get_latest_unscanned_scope.py | grep "LATEST_SCOPE_TYPE" | cut -d '=' -f2)

          if [[ -z "$LATEST_SCOPE_ID" || "$LATEST_SCOPE_ID" == "None" ]]; then
            echo "No valid scope entry found. Skipping Amass scan."
            exit 0
          fi 

          if [[ "$LATEST_SCOPE_TYPE" != "domains" ]]; then
            echo "Skipping Amass scan: The latest scope is not a domain."
            exit 0
          fi

          echo "LATEST_SCOPE_ID=$LATEST_SCOPE" >> $GITHUB_ENV
          echo "LATEST_SCOPE_NAME=$LATEST_SCOPE_NAME" >> $GITHUB_ENV
          echo "LATEST_SCOPE_TYPE=$LATEST_SCOPE_TYPE" >> $GITHUB_ENV


      - name: Run Subfinder (120s)
        if: env.LATEST_SCOPE_NAME != ''
        run: |
          echo "Scanning $LATEST_SCOPE_NAME with Subfinder..."
          timeout 120 docker run --rm projectdiscovery/subfinder -d ${{ env.LATEST_SCOPE_NAME }} -silent | tee subfinder_results.txt || echo "Subfinder timed out!"


      - name: Run Amass in Docker (120s Timeout)
        if: env.LATEST_SCOPE_NAME != '' && env.LATEST_SCOPE_TYPE == 'domains'
        run: |
          echo "Scanning $LATEST_SCOPE_NAME with Amass (max 120 seconds)..."
          timeout 120 docker run --rm caffix/amass enum -d ${{ env.LATEST_SCOPE_NAME }} | tee amass_results.txt || echo "Amass timed out!"








      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add scope_scan.db
          git commit -m "Auto-update: scope database updated" || echo "No changes to commit"
          git push